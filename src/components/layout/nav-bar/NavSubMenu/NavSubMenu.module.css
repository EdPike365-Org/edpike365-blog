.expandButton {
  padding: 0px;
  border: none;
  white-space: pre;
  color: var(--color-primary-main);
  transition: color 400ms ease-in-out, background-color 400ms ease-in-out;
  background-color: var(--color-background-paper);
  cursor: pointer;
}

.ulCSS {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  list-style-type: none;
  padding: 0 0 0 0;
}

.ulTransition {
  /* you have to use a bezier to get rid of the long delay before the closing animation starts */
  /* property name | duration | easing function | delay */
  transition: max-height 1s cubic-bezier(0, 1, 0, 1),
    transform 0.25s ease-out 0s, opacity 0.25s ease-out 0s;
}

.showOpen {
  /* guessing this max-height but we need it to run animation */
  max-height: 640px;
  transform-origin: top;
  transform: scaleY(1);
  opacity: 1;
}

.showClosed {
  max-height: 0px;
  transform-origin: top;
  transform: scaleY(0);
  opacity: 0.1;
}

/*
UPDATE: not sure this is still a thing
TODO VERFITY still a problem
const modifySessionScrollTop = thisRef => {
  // this is for the edge case when you close a submenu
  // then click on a link further down the page: the scrollTop is too high.
  // Before we close the submenu, we have to add that height
  // to the sessionStorage scrollTop
  // 1. grab the height of me when open
  const componentScrollHeight = thisRef.current.scrollHeight
  // 2. grab the current scrollTop in session mem
  const sOldScrollTop = window.sessionStorage.getItem(
    SESSION_STORAGE_SCROLLTOP_KEY
  )
  if (!sOldScrollTop) {
    return
  }
  const oldScrollTop = Number(sOldScrollTop)
  if (isNaN(oldScrollTop)) {
    return
  }
  // 3. add 1 and 2 and store in session mem
  const newScrollTop = oldScrollTop + componentScrollHeight
  console.log(
    `modifySessionScrollTop: newScrollTop ${newScrollTop} = oldScrollTop ${oldScrollTop} + componentScrollHeight ${componentScrollHeight}`
  )
  // store it in session mem
  window.sessionStorage.setItem(SESSION_STORAGE_SCROLLTOP_KEY, newScrollTop)
}
*/
